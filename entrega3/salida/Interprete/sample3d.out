CONSTRUCCION AST DESCENDENTE
--------------Recursivo--------------
{
<type>
^
tNodo$f:3,c:7$
tArbol$f:3,c:13$
;
<type>
<struct>
{
<string>
nombre$f:5,c:15$
,
tArbol$f:6,c:8$
izq$f:6,c:15$
,
tArbol$f:7,c:8$
der$f:7,c:15$
}
tNodo$f:8,c:8$
;
<type>
<struct>
{
<string>
[
50
]$f:10,c:16$
nombres$f:10,c:20$
,
<int>
cont$f:11,c:12$
}
tListaNombres$f:12,c:9$
;
tListaNombres$f:14,c:1$
nombres$f:14,c:15$
;
tArbol$f:15,c:1$
arbol$f:15,c:8$
;
<proc>
lee_nombres$f:19,c:6$
(
tListaNombres$f:19,c:18$
&
nombres$f:19,c:34$
)
{
<int>
i$f:20,c:7$
&&
<write>
"Introduce el número de nombres a ordenar (max 50): "$f:22,c:13$

;
<nl>
;
<read>
nombres$f:24,c:12$
^$f:24,c:19$
;
<while>
(null$f:25,c:27$)
<or>
(null$f:25,c:49$)
{
<write>
"Introduce el número de nombres a ordenar (max 50): "$f:26,c:16$

;
<nl>
;
<read>
nombres$f:27,c:15$
^$f:27,c:22$}
;
@
i$f:29,c:9$
=
0$f:29,c:11$
;
<write>
"Introduce un nombre en cada línea: "$f:30,c:13$
;
<nl>
;
<while>
i$f:31,c:13$
<
cont$f:31,c:24$
{
<read>
nombres$f:32,c:21$
[$f:32,c:29$
i$f:32,c:30$
]

;
@
i$f:33,c:11$
=
null$f:33,c:17$}}
;
<proc>
construye_arbol$f:41,c:6$
(
)
{
<int>
i$f:42,c:7$
;
<proc>
inserta_nombre$f:47,c:8$
(
tArbol$f:47,c:23$
&
arbol$f:47,c:32$
)
{
<if>
arbol$f:48,c:8$
==
null$f:48,c:17$
{
<new>
arbol$f:49,c:7$

;
@
nombre$f:50,c:17$
=
null$f:50,c:42$
;
@
izq$f:51,c:17$
=
null$f:51,c:35$}
<else>
{
tArbol$f:54,c:8$
padre$f:54,c:15$
;
tArbol$f:55,c:8$
act$f:55,c:15$
;
<bool>
fin$f:57,c:13$
&&
@
fin$f:59,c:11$
=
null$f:59,c:17$

;
@
padre$f:60,c:11$
=
null$f:60,c:19$
;
@
act$f:61,c:11$
=
arbol$f:61,c:17$
;
<while>
<not>$f:62,c:10$
fin$f:62,c:14$
{
@
padre$f:63,c:9$
=
act$f:63,c:17$

;
<if>
nombre$f:64,c:14$
<
null$f:64,c:39$
{
@
act$f:65,c:12$
=
der$f:65,c:22$
}
<else>
{
<if>
nombre$f:68,c:22$
>
null$f:68,c:47$
{
@
act$f:69,c:20$
=
izq$f:69,c:30$
}
}
;
<if>
act$f:72,c:16$
==
null$f:72,c:23$
{
@
fin$f:73,c:20$
=
null$f:73,c:26$
}
<else>
{
<if>
nombre$f:76,c:23$
==
null$f:76,c:49$
{
@
fin$f:77,c:21$
=
null$f:77,c:27$
}
}
;
<if>
act$f:82,c:13$
==
null$f:82,c:20$
{
<if>
nombre$f:84,c:23$
<
null$f:84,c:48$
{
<new>
null$f:85,c:26$
^$f:85,c:27$

;
@
nombre$f:86,c:30$
=
null$f:86,c:55$
;
@
izq$f:87,c:30$
=
null$f:87,c:53$}
<else>
{
<new>
null$f:91,c:26$
^$f:91,c:27$

;
@
nombre$f:92,c:30$
=
null$f:92,c:55$
;
@
izq$f:93,c:30$
=
null$f:93,c:52$}
}}}
}
&&
@
arbol$f:101,c:8$
=
null$f:101,c:16$

;
@
i$f:102,c:8$
=
0$f:102,c:10$
;
<while>
i$f:103,c:12$
<
cont$f:103,c:23$
{
<call>
inserta_nombre$f:104,c:13$
(
arbol$f:104,c:28$
)

;
@
i$f:105,c:10$
=
null$f:105,c:16$}}
;
<proc>
escribe_nombres$f:113,c:8$
(
tArbol$f:113,c:24$
arbol$f:113,c:31$
)
{
<if>
arbol$f:114,c:10$
!=
null$f:114,c:19$
{
<call>
escribe_nombres$f:115,c:9$
(
null$f:115,c:30$
^$f:115,c:31$
)

;
<write>
null$f:116,c:15$
^$f:116,c:16$
;
<nl>
;
<call>
escribe_nombres$f:117,c:8$
(
null$f:117,c:29$
^$f:117,c:30$
)}
}
&&
<call>
lee_nombres$f:123,c:10$
(
nombres$f:123,c:22$
)

;
<call>
construye_arbol$f:124,c:10$
(
)
;
<write>
"Listado de nombres ordenado"$f:125,c:11$
;
<nl>
;
<write>
"---------------------------"$f:126,c:11$
;
<nl>
;
<call>
escribe_nombres$f:127,c:10$
(
arbol$f:127,c:26$
)}
--------------Interprete--------------
{
<type>
^
tNodo$f:3,c:7$
tArbol$f:3,c:13$
;
<type>
<struct>
{
<string>
nombre$f:5,c:15$
,
tArbol$f:6,c:8$
izq$f:6,c:15$
,
tArbol$f:7,c:8$
der$f:7,c:15$
}
tNodo$f:8,c:8$
;
<type>
<struct>
{
<string>
[
50
]$f:10,c:16$
nombres$f:10,c:20$
,
<int>
cont$f:11,c:12$
}
tListaNombres$f:12,c:9$
;
tListaNombres$f:14,c:1$
nombres$f:14,c:15$
;
tArbol$f:15,c:1$
arbol$f:15,c:8$
;
<proc>
lee_nombres$f:19,c:6$
(
tListaNombres$f:19,c:18$
&
nombres$f:19,c:34$
)
{
<int>
i$f:20,c:7$
&&
<write>
"Introduce el número de nombres a ordenar (max 50): "$f:22,c:13$
;
<nl>
;
<read>
nombres$f:24,c:12$
.
cont$f:24,c:19$
;
<while>
(
nombres$f:25,c:14$
.
cont$f:25,c:21$
<$f:25,c:27$
0$f:25,c:29$
)
<or>$f:25,c:32$
(
nombres$f:25,c:36$
.
cont$f:25,c:43$
>$f:25,c:49$
50$f:25,c:51$
)
{
<write>
"Introduce el número de nombres a ordenar (max 50): "$f:26,c:16$
;
<nl>
;
<read>
nombres$f:27,c:15$
.
cont$f:27,c:22$
}
;
@
i$f:29,c:9$
=$f:29,c:10$
0$f:29,c:11$
;
<write>
"Introduce un nombre en cada línea: "$f:30,c:13$
;
<nl>
;
<while>
i$f:31,c:13$
<$f:31,c:15$
nombres$f:31,c:17$
.
cont$f:31,c:24$
{
<read>
nombres$f:32,c:14$
.
nombres$f:32,c:21$
[$f:32,c:29$
i$f:32,c:30$
]
;
@
i$f:33,c:11$
=$f:33,c:13$
i$f:33,c:15$
+$f:33,c:17$
1$f:33,c:19$
}
}
;
<proc>
construye_arbol$f:41,c:6$
(
)
{
<int>
i$f:42,c:7$
;
<proc>
inserta_nombre$f:47,c:8$
(
tArbol$f:47,c:23$
&
arbol$f:47,c:32$
)
{
<if>
arbol$f:48,c:8$
==$f:48,c:14$
<null>$f:48,c:17$
{
<new>
arbol$f:49,c:7$
;
@
arbol$f:50,c:11$
^$f:50,c:16$
.
nombre$f:50,c:17$
=$f:50,c:25$
nombres$f:50,c:27$
.
nombres$f:50,c:34$
[$f:50,c:42$
i$f:50,c:43$
]
;
@
arbol$f:51,c:11$
^$f:51,c:16$
.
izq$f:51,c:17$
=$f:51,c:22$
arbol$f:51,c:24$
^$f:51,c:29$
.
der$f:51,c:30$
=$f:51,c:35$
<null>$f:51,c:37$
}
<else>
{
tArbol$f:54,c:8$
padre$f:54,c:15$
;
tArbol$f:55,c:8$
act$f:55,c:15$
;
<bool>
fin$f:57,c:13$
&&
@
fin$f:59,c:11$
=$f:59,c:15$
<false>$f:59,c:17$
;
@
padre$f:60,c:11$
=$f:60,c:17$
<null>$f:60,c:19$
;
@
act$f:61,c:11$
=$f:61,c:15$
arbol$f:61,c:17$
;
<while>
<not>$f:62,c:10$
fin$f:62,c:14$
{
@
padre$f:63,c:9$
=$f:63,c:15$
act$f:63,c:17$
;
<if>
act$f:64,c:10$
^$f:64,c:13$
.
nombre$f:64,c:14$
<$f:64,c:22$
nombres$f:64,c:24$
.
nombres$f:64,c:31$
[$f:64,c:39$
i$f:64,c:40$
]
{
@
act$f:65,c:12$
=$f:65,c:16$
act$f:65,c:18$
^$f:65,c:21$
.
der$f:65,c:22$
}
<else>
{
<if>
act$f:68,c:18$
^$f:68,c:21$
.
nombre$f:68,c:22$
>$f:68,c:30$
nombres$f:68,c:32$
.
nombres$f:68,c:39$
[$f:68,c:47$
i$f:68,c:48$
]
{
@
act$f:69,c:20$
=$f:69,c:24$
act$f:69,c:26$
^$f:69,c:29$
.
izq$f:69,c:30$
}
}
;
<if>
act$f:72,c:16$
==$f:72,c:20$
<null>$f:72,c:23$
{
@
fin$f:73,c:20$
=$f:73,c:24$
<true>$f:73,c:26$
}
<else>
{
<if>
act$f:76,c:19$
^$f:76,c:22$
.
nombre$f:76,c:23$
==$f:76,c:31$
nombres$f:76,c:34$
.
nombres$f:76,c:41$
[$f:76,c:49$
i$f:76,c:50$
]
{
@
fin$f:77,c:21$
=$f:77,c:25$
<true>$f:77,c:27$
}
}
;
<if>
act$f:82,c:13$
==$f:82,c:17$
<null>$f:82,c:20$
{
<if>
padre$f:84,c:17$
^$f:84,c:22$
.
nombre$f:84,c:23$
<$f:84,c:31$
nombres$f:84,c:33$
.
nombres$f:84,c:40$
[$f:84,c:48$
i$f:84,c:49$
]
{
<new>
padre$f:85,c:21$
^$f:85,c:26$
.
der$f:85,c:27$
;
@
padre$f:86,c:19$
^$f:86,c:24$
.
der$f:86,c:25$
^$f:86,c:29$
.
nombre$f:86,c:30$
=$f:86,c:38$
nombres$f:86,c:40$
.
nombres$f:86,c:47$
[$f:86,c:55$
i$f:86,c:56$
]
;
@
padre$f:87,c:19$
^$f:87,c:24$
.
der$f:87,c:25$
^$f:87,c:29$
.
izq$f:87,c:30$
=$f:87,c:35$
padre$f:87,c:37$
^$f:87,c:42$
.
der$f:87,c:43$
^$f:87,c:47$
.
der$f:87,c:48$
=$f:87,c:53$
<null>$f:87,c:55$
}
<else>
{
<new>
padre$f:91,c:21$
^$f:91,c:26$
.
izq$f:91,c:27$
;
@
padre$f:92,c:19$
^$f:92,c:24$
.
izq$f:92,c:25$
^$f:92,c:29$
.
nombre$f:92,c:30$
=$f:92,c:38$
nombres$f:92,c:40$
.
nombres$f:92,c:47$
[$f:92,c:55$
i$f:92,c:56$
]
;
@
padre$f:93,c:19$
^$f:93,c:24$
.
izq$f:93,c:25$
^$f:93,c:29$
.
izq$f:93,c:30$
=$f:93,c:34$
padre$f:93,c:36$
^$f:93,c:41$
.
izq$f:93,c:42$
^$f:93,c:46$
.
der$f:93,c:47$
=$f:93,c:52$
<null>$f:93,c:54$
}
}
}
}
}
&&
@
arbol$f:101,c:8$
=$f:101,c:14$
<null>$f:101,c:16$
;
@
i$f:102,c:8$
=$f:102,c:9$
0$f:102,c:10$
;
<while>
i$f:103,c:12$
<$f:103,c:14$
nombres$f:103,c:16$
.
cont$f:103,c:23$
{
<call>
inserta_nombre$f:104,c:13$
(
arbol$f:104,c:28$
)
;
@
i$f:105,c:10$
=$f:105,c:12$
i$f:105,c:14$
+$f:105,c:16$
1$f:105,c:18$
}
}
;
<proc>
escribe_nombres$f:113,c:8$
(
tArbol$f:113,c:24$
arbol$f:113,c:31$
)
{
<if>
arbol$f:114,c:10$
!=$f:114,c:16$
<null>$f:114,c:19$
{
<call>
escribe_nombres$f:115,c:9$
(
arbol$f:115,c:25$
^$f:115,c:30$
.
izq$f:115,c:31$
)
;
<write>
arbol$f:116,c:10$
^$f:116,c:15$
.
nombre$f:116,c:16$
;
<nl>
;
<call>
escribe_nombres$f:117,c:8$
(
arbol$f:117,c:24$
^$f:117,c:29$
.
der$f:117,c:30$
)
}
}
&&
<call>
lee_nombres$f:123,c:10$
(
nombres$f:123,c:22$
)
;
<call>
construye_arbol$f:124,c:10$
(
)
;
<write>
"Listado de nombres ordenado"$f:125,c:11$
;
<nl>
;
<write>
"---------------------------"$f:126,c:11$
;
<nl>
;
<call>
escribe_nombres$f:127,c:10$
(
arbol$f:127,c:26$
)
}
--------------Visitante--------------
